name: Build and Release Installer

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Release on Windows
    runs-on: windows-latest

    permissions:
      contents: write

    env:
      CARGO_TERM_COLOR: always
      ARTIFACT_NAME: hachimi_installer.exe

    steps:
      - name: Checkout Installer repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Hachimi-Edge repository (dependency)
        uses: actions/checkout@v4
        with:
          repository: kairusds/Hachimi-Edge
          path: Hachimi-Edge

      - name: Checkout Cellar repository (dependency)
        uses: actions/checkout@v4
        with:
          repository: Hachimi-Hachimi/Cellar
          path: Cellar

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build Hachimi-Edge DLL
        run: cargo build --release
        working-directory: ./Hachimi-Edge

      - name: Build Cellar DLL
        run: cargo build --release
        working-directory: ./Cellar

      - name: Copy dependency DLLs to root
        run: |
          cp Hachimi-Edge/target/release/hachimi.dll .
          cp Cellar/target/release/cellar.dll .
        shell: bash

      - name: Build Installer executable
        run: cargo build --release --features compress_dll

      - name: Show sccache stats
        run: sccache --show-stats

      - name: Upload Artifact for inspection
        uses: actions/upload-artifact@v4
        with:
          name: installer-windows
          path: target/release/${{ env.ARTIFACT_NAME }}

      - name: Update and push the 'nightly' tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag -fa nightly -m "Nightly Build from commit ${{ github.sha }}"

          git push origin nightly --force
        shell: bash

      - name: Upload Asset to Nightly Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ env.ARTIFACT_NAME }}
          tag: nightly
          overwrite: true
          body: "Latest nightly build from commit `${{ github.sha }}`"
